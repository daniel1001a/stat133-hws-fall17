PTS = cor(EFF,PTS),
REB = cor(EFF, REB),
AST = cor(EFF, AST),
STL = cor(EFF, STL),
BLK = cor(EFF, BLK),
TO = cor(EFF, (-1)* TO),
missed_fg = cor(EFF, (-1)*missed_fg),
missed_ft = cor(EFF, (-1)*missed_ft)
)
barplot()
#correlation
Correlation <- data.frame (
PTS = cor(EFF,PTS),
REB = cor(EFF, REB),
AST = cor(EFF, AST),
STL = cor(EFF, STL),
BLK = cor(EFF, BLK),
TO = cor(EFF, (-1)* TO),
missed_fg = cor(EFF, (-1)*missed_fg),
missed_ft = cor(EFF, (-1)*missed_ft)
)
Correlation
orderofCor <- sort(Correlation, decreasing = TRUE)
bartlot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
orderofCor <- sort(Correlation, decreasing = TRUE)
barplot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
orderofCor <- sort(correlation, decreasing = TRUE)
barplot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
orderofCor <- sort(correlation, decreasing = TRUE)
barplot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
orderofCor <- sort(correlation, decreasing = TRUE)
barplot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
orderofCor <- sort(correlation, decreasing = TRUE)
barplot(as.numeric(orderofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
diff_ofCor <- sort(Correlation, decreasing = TRUE)
barplot(as.numeric(diff_ofCor), main = "Correlations between Player Stats and EFF", names.arg = variable.names(orderofCor), cex= 0.7, ylim = c(-1,1), col = ifelse(as.numeric(Correlation) > 0, "grey", "cor1"))
diff_ofCor <- c(GP, TO, missed_fg, missed_ft, BLK, STL, AST, PTS, REB)
diff_ofCor <- sort(Correlation, decreasing = TRUE)
#display
diff_ofCor <- c(GP, TO, missed_fg, missed_ft, BLK, STL, AST, PTS, REB)
diff_ofCor <- sort(Correlation, decreasing = TRUE)
barplot(diff_ofCor)
#Correlation
Correlation <- data.frame (
PTS = cor(EFF,PTS),
REB = cor(EFF, REB),
AST = cor(EFF, AST),
STL = cor(EFF, STL),
BLK = cor(EFF, BLK),
TO = cor(EFF, (-1)* TO),
missed_fg = cor(EFF, (-1)*missed_fg),
missed_ft = cor(EFF, (-1)*missed_ft)
)
Correlation
#display
ocor <- sort(Correlation, decreasing = TRUE)
diff_ofCor <- c(GP, TO, missed_fg, missed_ft, BLK, STL, AST, PTS, REB)
diff_ofCor <- sort(Correlation, decreasing = TRUE)
#5
X = data.frame(cat1$EFF, cat1$Salary)
#5
X = data.frame(EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2)
cor(cat1$EFF, cat1$Salary)
cat1[MPG >= 20, ]
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
#忘了時間
hist(EFF, main = "Histogram of Effucuency (EFF)")
str(cat1)
cat1 <- mutate(cat1,EFF)
str(cat1)
#5 有問題
X = data.frame(cat$EFF, cat1$Salary)
#5 有問題
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2)
cor(cat1$EFF, cat1$Salary)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
#忘了時間
hist(EFF, main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
#忘了時間
hist(EFF, main = "Histogram of Effucuency (EFF)")
#5
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2)
cor(cat1$EFF, cat1$Salary)
#display
new-Cor <- sort(Correlation, decreasing = TRUE)
#display
new_Cor <- sort(Correlation, decreasing = TRUE)
barplot(as.number(new_Cor), ylim = c(-1,1), main = 'Correlation between Player Stats and EFF', names.arg = variable.names(new_Cor), col = ifelse(as.numeric(new_Cor) > 0, "grey", "caral2"))
#display
new_Cor <- sort(Correlation, decreasing = TRUE)
barplot(as.numeric(new_Cor), ylim = c(-1,1), main = 'Correlation between Player Stats and EFF', names.arg = variable.names(new_Cor), col = ifelse(as.numeric(new_Cor) > 0, "grey", "caral2"))
#display
new_Cor <- sort(Correlation, decreasing = TRUE)
barplot(as.numeric(new_Cor), ylim = c(-1,1), main = 'Correlation between Player Stats and EFF', names.arg = variable.names(new_Cor), col = ifelse(as.numeric(new_Cor) > 0, "grey", "coral2"))
abline(h = 0)
#display
new_Cor <- sort(Correlation, decreasing = TRUE)
barplot(as.numeric(new_Cor), ylim = c(-1,1), main = 'Correlation between Player Stats and EFF', names.arg = variable.names(new_Cor), col = ifelse(as.numeric(new_Cor) > 0, "grey", "coral2"), border = NA)
abline(h = 0)
#Correlation
Correlation <- data.frame (
PTS = cor(EFF,PTS),
REB = cor(EFF, REB),
AST = cor(EFF, AST),
STL = cor(EFF, STL),
BLK = cor(EFF, BLK),
TO = cor(EFF, (-1)* TO),
missed_fg = cor(EFF, (-1)*missed_fg),
missed_ft = cor(EFF, (-1)*missed_ft)
)
Correlation
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks =5,main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks =5,main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks =10,main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks = 8,main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks = 5,main = "Histogram of Effucuency (EFF)")
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks = 5,
xlim = (-5,35),
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN/cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
# problem 3: change the values in Experience from
# 'R' to 0, then convert the entire column to int
cat1$Experience[cat1$Experience == 'R'] <- 0
cat1$Experience = as.integer(cat1$Experience)
summary(EFF)
EFF <- (PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
summary(EFF)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$MIN+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (cat1$PTS + cat1$REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
summary(EFF)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (cat1$PTS + cat1$REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
summary(EFF)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- c(cat1$PTS + cat1$REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
summary(EFF)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
#Correlation
Correlation <- data.frame (
PTS = cor(EFF,PTS),
REB = cor(EFF, REB),
AST = cor(EFF, AST),
STL = cor(EFF, STL),
BLK = cor(EFF, BLK),
TO = cor(EFF, (-1)* TO),
missed_fg = cor(EFF, (-1)*missed_fg),
missed_ft = cor(EFF, (-1)*missed_ft)
)
Correlation
#5
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2)
cor(cat1$EFF, cat1$Salary)
cat1[MPG >= 20, ]
#creat players2
players2 <- data.fram(cat1[MPG >=20, ] )
#creat players2
players2 <- data.frame(cat1[MPG >=20, ] )
players2
View(players2)
View(players2)
#5
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2)
cor(cat1$EFF, cat1$Salary)
cat1[MPG >= 20, ]
#5
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "pink", lwd = 2)
cor(cat1$EFF, cat1$Salary)
cat1[MPG >= 20, ]
#5
X = data.frame(cat1$EFF, cat1$Salary)
plot(X, main = "Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(X), col = "black", lwd = 2.5)
cor(cat1$EFF, cat1$Salary)
cat1[MPG >= 20, ]
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
players2
View(cat1)
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
plot(players2$EFF,players2$Salary, ylab = "Salary", xlab = "Effucuency", cex = 0.7, col = "grey", main = "scatterplot between Efficiency and Salary ", lines(lowess(players2$EFF,players2$Salary,), lwd = 2.5, col = "red")
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
plot(players2$EFF,players2$Salary, ylab = "Salary", xlab = "Efficiency", cex = 0.7, col = "grey", main = "scatterplot between Efficiency and Salary ", lines(lowess(players2$EFF,players2$Salary,), lwd = 2.5, col = "red")
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
plot(players2$EFF,players2$Salary, ylab = "Salary", xlab = "Efficiency", cex = 0.7, col = "grey", main = "scatterplot between Efficiency and Salary ", lines(lowess(players2$EFF,players2$Salary,), lwd = 2.5, col = "red"))
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
plot(players2$EFF,players2$Salary, ylab = "Salary", xlab = "Efficiency", cex = 0.7, col = "grey", main = "scatterplot between Efficiency and Salary ", lines(lowess(players2$EFF,players2$Salary), lwd = 2.5, col = "red"))
#creat players2
players2 <- data.frame(cat1[MPG >= 20, ] )
plot(players2$EFF,players2$Salary, ylab = "Salary", xlab = "Efficiency", cex = 0.7, col = "grey", main = "scatterplot between Efficiency and Salary ", lines(lowess(players2$EFF,players2$Salary), lwd = 2.5, col = "red"))
cor(players2$EFF, players2$Salary)
# problem 3: change the values in Experience from
# 'R' to 0, then convert the entire column to int
cat1$Experience[cat1$Experience == 'R'] <- 0
cat1$Experience = as.integer(cat1$Experience)
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
#the columns Player, Team, and Experience have to be declared as type character.
getwd()
cat1 <- read.csv("nba2017-player-statistics.csv", TRUE, ",")
str(data1)
cat1s <- read.csv("nba2017-player-statistics.csv", TRUE, colClasses = c("character","character","factor", "character", "double", "integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer" ))
#Disply the player, name, team, salary and EFF value of the top 10 players by EEF in decreasing order
top10EFF <- arrange(cat1, desc(EFF))
top10EFF[1:10, c("Player", "Team", "Salary", "EFF")]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# download csv file to your working directory
# (do NOT include this code in your Rmd)
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
getwd()
#the columns Player, Team, and Experience have to be declared as type character.
getwd()
cat1 <- read.csv("nba2017-player-statistics.csv", TRUE, ",")
cat1s <- read.csv("nba2017-player-statistics.csv", TRUE, colClasses = c("character","character","factor", "character", "double", "integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer" ))
str(cat1)
library(readr)
cat2 <- read_csv("data/nba2017-player-statistics.csv")
str(cat2)
cat2 <- read_csv("nba2017-player-statistics.csv",
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c("C", "SF", "PF", "PG","SG")),
Experience = col_character(),
Salary = col_double())
)
str(cat1)
#還是factor\
#4
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
# problem 3: change the values in Experience from
# 'R' to 0, then convert the entire column to int
cat1$Experience[cat1$Experience == 'R'] <- 0
cat1$Experience = as.integer(cat1$Experience)
# problem 3: change the values in Experience from
# 'R' to 0, then convert the entire column to int
cat1$Experience[cat1$Experience == 'R'] <- 0
cat1$Experience = as.integer(cat1$Experience)
# download csv file to your working directory
# (do NOT include this code in your Rmd)
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
getwd()
library(dplyr)
#Disply the player, name, team, salary and EFF value of the top 10 players by EEF in decreasing order
top10EFF <- arrange(cat1, desc(EFF))
top10EFF[1:10, c("Player", "Team", "Salary", "EFF")]
top10EFF
#4
cat1 <- mutate(cat1,EFF)
missed_fg <- cat1$FGA - cat1$FGM
missed_ft <- cat1$FTA - cat1$FTM
PTS <- cat1$Points2 * 2 + cat1$Points3*3 + cat1$FTM
AST <- cat1$AST
STL <- cat1$STL
TO <- cat1$TO
REB <- cat1$OREB+cat1$DREB
GP <- cat1$GP
BLK <- cat1$BLK
EFF <- (PTS + REB + cat1$AST + cat1$STL + cat1$BLK - missed_fg - missed_ft - cat1$TO)/GP
MPG <- cat1$MIN/cat1$GP
summary(EFF)
hist(EFF, breaks = 5,
freq = TRUE,
border = TRUE,
xlim = c(-5,35),
main = "Histogram of Effucuency (EFF)")
#Disply the player, name, team, salary and EFF value of the top 10 players by EEF in decreasing order
top10EFF <- arrange(cat1, desc(EFF))
top10EFF
top10EFF[1:10, c("Player", "Team", "Salary", "EFF")]
#Disply the player, name, team, salary and EFF value of the top 10 players by EEF in decreasing order
cat1 <- mutate(cat1,EFF)
top10EFF <- arrange(cat1, desc(EFF))
top10EFF[1:10, c("Player", "Team", "Salary", "EFF")]
